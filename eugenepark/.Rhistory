x = 1
x = 1
x = 1
y = 2
x+y
shinyApp(ui = ui, server = server) # this launches your app
install.packages("shiny")
source('~/.active-rstudio-document', echo=TRUE)
shinyApp(ui = ui, server = server)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
shinyApp(ui = ui, server = server)
source('~/.active-rstudio-document', echo=TRUE)
library(dplyr)
library(caret)
urlfile <-'https://raw.githubusercontent.com/hadley/fueleconomy/master/data-raw/vehicles.csv'
urlfile <-'https://raw.githubusercontent.com/hadley/fueleconomy/master/data-raw/vehicles.csv'
library(caret)
names(getModelInfo())
# Load data
urlfile <-'https://raw.githubusercontent.com/hadley/fueleconomy/master/data-raw/vehicles.csv'
x <- getURL(urlfile, ssl.verifypeer = FALSE)
vehicles <- read.csv(textConnection(x))
# clean up the data and only use the first 24 columns
vehicles <- vehicles[names(vehicles)[1:24]]
vehicles <- data.frame(lapply(vehicles, as.character), stringsAsFactors=FALSE)
vehicles <- data.frame(lapply(vehicles, as.numeric))
vehicles[is.na(vehicles)] <- 0
vehicles$cylinders <- ifelse(vehicles$cylinders == 6, 1,0)
prop.table(table(vehicles$cylinders))
# shuffle and split the data into three parts
set.seed(1234)
vehicles <- vehicles[sample(nrow(vehicles)),]
split <- floor(nrow(vehicles)/3)
ensembleData <- vehicles[0:split,]
blenderData <- vehicles[(split+1)sadsplit*2),]
testingData <- vehicles[(split*2+1):nrow(vehicles),]
# set label name and predictors
labelName <- 'cylinders'
predictors <- names(ensembleData)[names(ensembleData) != labelName]
library(caret)
# create a caret control object to control the number of cross-validations performed
myControl <- trainControl(method='cv', number=3, returnResamp='none')
# quick benchmark model
test_model <- train(blenderData[,predictors], blenderData[,labelName], method='gbm', trControl=myControl)
preds <- predict(object=test_model, testingData[,predictors])
library(pROC)
auc <- roc(testingData[,labelName], preds)
print(auc$auc) # Area under the curve: 0.9896
# train all the ensemble models with ensembleData
model_gbm <- train(ensembleData[,predictors], ensembleData[,labelName], method='gbm', trControl=myControl)
model_rpart <- train(ensembleData[,predictors], ensembleData[,labelName], method='rpart', trControl=myControl)
model_treebag <- train(ensembleData[,predictors], ensembleData[,labelName], method='treebag', trControl=myControl)
# get predictions for each ensemble model for two last data sets
# and add them back to themselves
blenderData$gbm_PROB <- predict(object=model_gbm, blenderData[,predictors])
blenderData$rf_PROB <- predict(object=model_rpart, blenderData[,predictors])
blenderData$treebag_PROB <- predict(object=model_treebag, blenderData[,predictors])
testingData$gbm_PROB <- predict(object=model_gbm, testingData[,predictors])
testingData$rf_PROB <- predict(object=model_rpart, testingData[,predictors])
testingData$treebag_PROB <- predict(object=model_treebag, testingData[,predictors])
# see how each individual model performed on its own
auc <- roc(testingData[,labelName], testingData$gbm_PROB )
print(auc$auc) # Area under the curve: 0.9893
auc <- roc(testingData[,labelName], testingData$rf_PROB )
print(auc$auc) # Area under the curve: 0.958
auc <- roc(testingData[,labelName], testingData$treebag_PROB )
print(auc$auc) # Area under the curve: 0.9734
# run a final model to blend all the probabilities together
predictors <- names(blenderData)[names(blenderData) != labelName]
final_blender_model <- train(blenderData[,predictors], blenderData[,labelName], method='gbm', trControl=myControl)
# See final prediction and AUC of blended ensemble
preds <- predict(object=final_blender_model, testingData[,predictors])
auc <- roc(testingData[,labelName], preds)
print(auc$auc) # Area under the curve: 0.9922
library(caret)
names(getModelInfo())
urlfile <-'https://raw.githubusercontent.com/hadley/fueleconomy/master/data-raw/vehicles.csv'
x <- getURL(urlfile, ssl.verifypeer = FALSE)
library(RCurl)
install.packages(RCurl)
install.packages("RCurl")
vehicles <- read.csv(textConnection(x))
x <- getURL(urlfile, ssl.verifypeer = FALSE)
urlfile <-'https://raw.githubusercontent.com/hadley/fueleconomy/master/data-raw/vehicles.csv'
x <- getURL(urlfile, ssl.verifypeer = FALSE)
library(RCurl)
plot(rules)
library(arules)
library(arulesViz)
??Groceries
data(Groceries)
summary(Groceries)
rules<-apriori(Groceries,parameter=list(support=0.005,confidence=0.5))
plot(rules)
library(arulesViz)
install.packages("seriation")
library(arules)
library(arulesViz)
??Groceries
data(Groceries)
summary(Groceries)
rules<-apriori(Groceries,parameter=list(support=0.005,confidence=0.5))
plot(rules)
rules<-apriori(Groceries,parameter=list(support=0.005,confidence=0.5))
plot(rules)
plotly_arules(rules)
inspectDT(rules)
plot(rules)
plotly_arules(rules)
inspectDT(rules)
install.packages("arulesViz")
library(arules)
library(arulesViz)
install.packages("seriation")
library(arulesViz)
library(arules)
library(arulesViz)
??Groceries
data(Groceries)
summary(Groceries)
rules<-apriori(Groceries,parameter=list(support=0.005,confidence=0.5))
plot(rules)
plotly_arules(rules)
inspectDT(rules)
knitr::opts_chunk$set(echo = TRUE)
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
setwd("~/Desktop/CSDA-1050F18S1/eugenepark")
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
knitr::opts_chunk$set(echo = TRUE)
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
knitr::opts_chunk$set(echo = TRUE)
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
getwd()
#importing files I will work with
hr<-read.csv("CSDA1050HR.csv")
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
hr<-read.csv("~/Desktop/CSDA-10508S1/eugenepark/CSDA1050HR.csv")
fi<-read.csv("~/Desktop/CSDA-1050F18S1/eugenepark/CSDA1050FI.csv")
View(fi)
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-1050F18S1/eugenepark/CSDA1050HR.csv")
fi<-read.csv("~/Desktop/CSDA-1050F18S1/eugenepark/CSDA1050FI.csv")
#Examine the HR dataset
summary(hr)
summary(fi)
knitr::opts_chunk$set(echo = TRUE)
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-1050F18S1/eugenepark/CSDA1050HR.csv")
fi<-read.csv("~/Desktop/CSDA-1050F18S1/eugenepark/CSDA1050FI.csv")
#Examine the HR dataset
summary(hr)
summary(fi)
#importing files I will work with
hr<-read.csv("~/Desktop/CSDA-1050F18S1/eugenepark/CSDA1050HR.csv")
fi<-read.csv("~/Desktop/CSDA-1050F18S1/eugenepark/CSDA1050FI.csv")
#Examine the HR dataset
summary(hr)
summary(fi)
